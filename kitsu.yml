openapi: 3.0.3
info:
  version: edge
  title: 'Kitsu JSON:API'
  description: NYI
  termsOfService: 'https://kitsu.io/terms'
  contact:
    url: 'https://kitsu.io'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://kitsu.io/api/edge'
    description: Production API
x-tagGroups:
  - name: Media
    tags:
      - Anime
paths:
  /anime:
    get:
      tags:
        - Anime
      summary: Get Anime Collection
      description: Get a collection of anime resources
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Anime'
                meta:
                  type: object
                  readOnly: true
                  properties:
                    count:
                      type: integer
                      example: 15000
                links:
                  type: object
                  readOnly: true
                  properties:
                    first:
                      type: string
                      description: First page of the collection
                      example: 'https://kitsu.io/api/edge/...'
                    prev:
                      type: string
                      description: Previous page of the collection. Not present if there is not a previous page
                      example: 'https://kitsu.io/api/edge/...'
                    next:
                      type: string
                      description: Next page of the collection. Not present if there is not a next page
                      example: 'https://kitsu.io/api/edge/...'
                    last:
                      type: string
                      description: Last page of the collection
                      example: 'https://kitsu.io/api/edge/...'
                included:
                  type: array
                  readOnly: true
                  items:
                    type: object
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/paths/~1anime/get/requestBody/content/application~1vnd.api%2Bjson/schema'
      parameters:
        - name: 'filter[test]'
          in: query
          description: Test example
          schema:
            description: Hi
    post:
      tags:
        - Anime
      summary: Create Anime
      description: |
        Users must be authenticated and have the `admin` User Role to create a resource.
      responses:
        '200':
          description: OK
          content:
            application/json: {}
  '/anime/{id}':
    get:
      tags:
        - Anime
      description: Get an anime resource
      summary: Get Anime
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/Anime'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/paths/~1anime~1%7Bid%7D/get/requestBody/content/application~1vnd.api%2Bjson/schema'
      parameters:
        - name: 'filter[test]'
          in: query
          description: Test example
          schema:
            description: Hi
    patch:
      tags:
        - Anime
      description: Update Anime
      responses:
        '200':
          description: OK
          content:
            application/json: {}
    delete:
      tags:
        - Anime
      description: Delete Anime
      responses:
        '200':
          description: OK
          content:
            application/json: {}
components:
  schemas:
    Anime:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            canonicalTitle:
              type: string
